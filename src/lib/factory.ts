/* istanbul ignore file */

import { CubeState } from '../cube';

export const flattenCubeState = (state: CubeState): number[] => {
  return state.flat().flat();
};

export const newCubeState = (): CubeState => {
  return [
    // Top
    [
      [-1, 1, -1],
      [-1, 2, -1],
    ],
    [
      [0, 1, -1],
      [0, 2, -1],
    ],
    [
      [1, 1, -1],
      [1, 2, -1],
    ], // 0, 1, 2
    [
      [-1, 1, 0],
      [-1, 2, 0],
    ],
    [
      [0, 1, 0],
      [0, 2, 0],
    ],
    [
      [1, 1, 0],
      [1, 2, 0],
    ], // 3, 4, 5
    [
      [-1, 1, 1],
      [-1, 2, 1],
    ],
    [
      [0, 1, 1],
      [0, 2, 1],
    ],
    [
      [1, 1, 1],
      [1, 2, 1],
    ], // 6, 7, 8

    // Bottom
    [
      [-1, -1, -1],
      [-1, -2, -1],
    ],
    [
      [0, -1, -1],
      [0, -2, -1],
    ],
    [
      [1, -1, -1],
      [1, -2, -1],
    ], // 9
    [
      [-1, -1, 0],
      [-1, -2, 0],
    ],
    [
      [0, -1, 0],
      [0, -2, 0],
    ],
    [
      [1, -1, 0],
      [1, -2, 0],
    ],
    [
      [-1, -1, 1],
      [-1, -2, 1],
    ],
    [
      [0, -1, 1],
      [0, -2, 1],
    ],
    [
      [1, -1, 1],
      [1, -2, 1],
    ], // ...17

    // Front
    [
      [-1, 1, -1],
      [-1, 1, -2],
    ],
    [
      [0, 1, -1],
      [0, 1, -2],
    ],
    [
      [1, 1, -1],
      [1, 1, -2],
    ], // 18...
    [
      [-1, 0, -1],
      [-1, 0, -2],
    ],
    [
      [0, 0, -1],
      [0, 0, -2],
    ],
    [
      [1, 0, -1],
      [1, 0, -2],
    ],
    [
      [-1, -1, -1],
      [-1, -1, -2],
    ],
    [
      [0, -1, -1],
      [0, -1, -2],
    ],
    [
      [1, -1, -1],
      [1, -1, -2],
    ], // ...26

    // Back
    [
      [-1, 1, 1],
      [-1, 1, 2],
    ],
    [
      [0, 1, 1],
      [0, 1, 2],
    ],
    [
      [1, 1, 1],
      [1, 1, 2],
    ], // 27...
    [
      [-1, 0, 1],
      [-1, 0, 2],
    ],
    [
      [0, 0, 1],
      [0, 0, 2],
    ],
    [
      [1, 0, 1],
      [1, 0, 2],
    ],
    [
      [-1, -1, 1],
      [-1, -1, 2],
    ],
    [
      [0, -1, 1],
      [0, -1, 2],
    ],
    [
      [1, -1, 1],
      [1, -1, 2],
    ], // ...35

    // // Left
    [
      [-1, 1, -1],
      [-2, 1, -1],
    ],
    [
      [-1, 1, 0],
      [-2, 1, 0],
    ],
    [
      [-1, 1, 1],
      [-2, 1, 1],
    ],
    [
      [-1, 0, -1],
      [-2, 0, -1],
    ],
    [
      [-1, 0, 0],
      [-2, 0, 0],
    ],
    [
      [-1, 0, 1],
      [-2, 0, 1],
    ],
    [
      [-1, -1, -1],
      [-2, -1, -1],
    ],
    [
      [-1, -1, 0],
      [-2, -1, 0],
    ],
    [
      [-1, -1, 1],
      [-2, -1, 1],
    ],

    // // Right
    [
      [1, 1, -1],
      [2, 1, -1],
    ],
    [
      [1, 1, 0],
      [2, 1, 0],
    ],
    [
      [1, 1, 1],
      [2, 1, 1],
    ],
    [
      [1, 0, -1],
      [2, 0, -1],
    ],
    [
      [1, 0, 0],
      [2, 0, 0],
    ],
    [
      [1, 0, 1],
      [2, 0, 1],
    ],
    [
      [1, -1, -1],
      [2, -1, -1],
    ],
    [
      [1, -1, 0],
      [2, -1, 0],
    ],
    [
      [1, -1, 1],
      [2, -1, 1],
    ],
  ];
};
